/* Given a singly linked list of size N of integers. The task is to check if the given linked list is palindrome or not */


#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <stack>
using namespace std;
struct Node 
{
  int data;
  struct Node *next;
  Node(int x) 
  {
    data = x;
    next = NULL;
  }
};
void append(struct Node** head_ref, struct Node **tail_ref, int new_data)
{
    struct Node* new_node = new Node(new_data);
    
    if (*head_ref == NULL)
       *head_ref = new_node;
    else
       (*tail_ref)->next = new_node;
    *tail_ref = new_node;
}
bool isPalindrome(Node *head);
int main()
{
  int T,i,n,l;
    cin>>T;
    while(T--){
    struct Node *head = NULL,  *tail = NULL;
        cin>>n;
        for(i=1;i<=n;i++)
        {
            cin>>l;
            append(&head, &tail, l);
        }
   	cout<<isPalindrome(head)<<endl;
    }
    return 0;
}

bool isPalindrome(Node *head)
{
    Node *temp=head;
    stack<int> s;
   while(temp!=NULL)
   {
       s.push(temp->data);
       temp=temp->next;
   }
   while(!s.empty())
   {
       int x=s.top();
       if(x==head->data)
       {
           head=head->next;
       }else break;
        s.pop();
   }
   if(head!=NULL)
   {
       return 0;
   }
   return 1;
}
